version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aegis-postgres
    environment:
      POSTGRES_DB: aegis
      POSTGRES_USER: aegis
      POSTGRES_PASSWORD: aegis-secure-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aegis-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aegis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aegis-redis
    command: redis-server --appendonly yes --requirepass aegis-redis-password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - aegis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aegis API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aegis-api
    environment:
      DATABASE_URL: postgresql://aegis:aegis-secure-password@postgres:5432/aegis
      REDIS_URL: redis://:aegis-redis-password@redis:6379
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      DEBUG: ${DEBUG:-false}
    volumes:
      - ./app:/app/app
      - model_cache:/tmp/aegis_models
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aegis-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: aegis-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./website:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - aegis-network
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: aegis-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - aegis-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: aegis-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - aegis-network
    restart: unless-stopped

networks:
  aegis-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  model_cache:
  prometheus_data:
  grafana_data: